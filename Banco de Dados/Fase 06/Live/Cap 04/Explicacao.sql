-- BANCO DE DADOS E SGBD --

-- Banco de dados Ã© o local onde armazenamos dados. Podemos chamar de banco de
-- dados arquivos do Microsoft Access, por exemplo. Ou planilhas de excel, ou
-- outras fontes onde podemos salvar dados de forma organizada.

-- JÃ¡ um SGBD, ou Sistema Gerenciador de Banco de Dados, Ã© um software voltado
-- para gerir dados organizados em objetos que se relacionam e podem ser consultados
-- de forma organizada atravÃ©s de um interface de programaÃ§Ã£o.
-- Ou como a definiÃ§Ã£o mais tradicional do Wikipedia:

-- â€œUm Sistema de Gerenciamento de Banco de Dados (SGBD) â€“ do inglÃªs Data Base
-- Management System (DBMS) â€“ Ã© o conjunto de programas de computador (softwares)
-- responsÃ¡veis pelo gerenciamento de uma base de dados. Seu principal objetivo Ã©
-- retirar da aplicaÃ§Ã£o cliente a responsabilidade de gerenciar o acesso, a
-- manipulaÃ§Ã£o e a organizaÃ§Ã£o dos dados. O SGBD disponibiliza uma interface para
-- que seus clientes possam incluir, alterar ou consultar dados previamente armazenados.
-- Em bancos de dados relacionais a interface Ã© constituÃ­da pelas APIs (Application
-- Programming Interface) ou drivers do SGBD, que executam comandos na linguagem
-- SQL (Structured Query Language).â€?


-- SGBD E SQL (O que Ã© SQL?) --

-- Como a propria definiÃ§Ã£o do Wikipedia, SQL Ã© uma das principais interfaces de
-- comunicaÃ§Ã£o do desenvolvedor com o banco de dados, seja para manipulÃ¡-lo ou
-- consultÃ¡-lo.


-- CLIENT DE BANCO DE DADOS --

-- Ã‰ importante definir que um client visual utilizado para acessar os SGBDs nÃ£o
-- Ã© o Banco em sÃ­. Um client Ã© a ferramenta que se conectarÃ¡ ao SGBD (o banco em
-- sÃ­ nÃ£o tem interface grÃ¡fica normalmente), e facilitarÃ¡ o acesso atravÃ©s de recursos
-- visuais e um interface de desenvolvimento mais amigÃ¡vel. 

-- Exemplos de clients sÃ£o: DBeaver, DataGrip e o prÃ³prio Oracle SQL Developer.


-- ESTRUTURAS DENTRO DO BANCO DE DADOS --

-- Um banco de dados Ã© composto principalmente por tabelas que se relacionam ou nÃ£o.
-- Mas nÃ£o somente por tabelas. A estrutura mais genÃ©rica de um banco Ã© o prÃ³prio banco.
-- Um servidor com o SGBD Oracle, pode conter diversos bancos Oracle sendo administrados
-- ao mesmo tempo, seja para aplicaÃ§Ãµes distintas, ambientes diferentes, ou qualquer
-- outro cenÃ¡rio. Ã‰ importante sabermos qual o banco que vamos acessar dentro de um 
-- host. Uma vez que temos um banco, podemos organizÃ¡-lo segregando assuntos atravÃ©s
-- de schemas, e dentros dos schemas teremos as tabelas, views e etc.

-- Banco >> Schema >> Tabelas,Views


-- TIPOS DE DADOS --

-- varchar2
-- char
-- number
-- date
-- long
-- ...


-- SQL (da definiÃ§Ã£o a consulta) --

-- SQL Ã© uma linguagem de definiÃ§Ã£o, manipulaÃ§Ã£o e controle de banco de dados.
-- Representa um conjunto de comandos responsÃ¡veis pela definiÃ§Ã£o das tabelas,
-- seleÃ§Ã£o e atualizaÃ§Ã£o dos dados em um SGBD. Temos subdivisÃµes dentro do SQL:

-- DDL (Data Definition Language)
-- DML (Data Manipulation Language)
-- DCL (Data Control Language)
-- DTL (Data Transaction Language)
-- DQL (Data Query Language)

-- DDL >> DML >> DQL

-- DDL --

-- CREATE TABLE
-- ALTER TABLE
-- CONTRAINTS
-- DROP TABLE
-- CASCADE
-- SEQUENCE

-- EXEMPLO --

CREATE TABLE t_sip_departamento(
    cd_departamento NUMBER(3),
    nm_departamento VARCHAR2(30)
);

-- Puxando todas as colunas da tabela t_sip_departamento
SELECT * FROM t_sip_departamento;

-- Apagar tabela t_sip_departamento
DROP TABLE t_sip_departamento;

CREATE TABLE T_SIP_DEPARTAMENTO(
    cd_departamento NUMBER(3)    NOT NULL, -- NOT NULL não deixa a coluna vir sem nenhum valor
    nm_departamento VARCHAR2(30)
);

ALTER TABLE T_SIP_DEPARTAMENTO
    ADD CONSTRAINT PK_SIP_DEPTO PRIMARY KEY (cd_departamento);

DROP TABLE T_SIP_DEPARTAMENTO;

-- TABELA DEPARTAMENTO
CREATE TABLE T_SIP_DEPARTAMENTO(
    cd_departamento NUMBER(3)    NOT NULL,
    nm_departamento VARCHAR2(30) NOT NULL,
    CONSTRAINT PK_SIP_DEPTO PRIMARY KEY (cd_departamento)
);

ALTER TABLE T_SIP_DEPARTAMENTO
    ADD CONSTRAINT UN_SIP_DEPTO_NOME
    UNIQUE (nm_departamento);

-- DML
INSERT INTO T_SIP_DEPARTAMENTO VALUES (1, 'mkt');
INSERT INTO T_SIP_DEPARTAMENTO VALUES (2, null);
INSERT INTO T_SIP_DEPARTAMENTO VALUES (2, NULL);
INSERT INTO T_SIP_DEPARTAMENTO (nm_departamento) VALUES ('mkt');
INSERT INTO T_SIP_DEPARTAMENTO VALUES (1, 'mkt');
INSERT INTO T_SIP_DEPARTAMENTO VALUES (2, 'mkt');


SELECT * FROM t_sip_departamento;

CREATE TABLE T_SIP_FUNCIONARIO
  (
    nr_matricula    NUMBER(6)    NOT NULL,
    cd_departamento NUMBER(3)    NOT NULL,
    nm_nome         VARCHAR2(60) NOT NULL,
    dt_nascimento   DATE         NULL,
    dt_admissao     DATE         NULL,
    ds_endereco     VARCHAR2(60) NOT NULL,
    vl_salario      NUMBER(8,2)  NOT NULL
);

INSERT INTO T_SIP_FUNCIONARIO (
    nr_matricula, cd_departamento, nm_nome, ds_endereco, vl_salario)
VALUES (1,1,'A','E',1000);

SELECT * FROM T_SIP_FUNCIONARIO;

ALTER TABLE T_SIP_FUNCIONARIO
    ADD CONSTRAINT FK_DEPTO_FUNC FOREIGN KEY (cd_departamento)
    REFERENCES T_SIP_DEPARTAMENTO (cd_departamento);

DROP TABLE T_SIP_DEPARTAMENTO CASCADE CONSTRAINTS;
DROP TABLE T_SIP_FUNCIONARIO;

-- TABELA FUNCIONARIO
CREATE TABLE T_SIP_FUNCIONARIO
  (
    nr_matricula    NUMBER(6)    NOT NULL,
    cd_departamento NUMBER(3)    NOT NULL,
    nm_nome         VARCHAR2(60) NOT NULL,
    dt_nascimento   DATE         NULL,
    dt_admissao     DATE         NULL,
    ds_endereco     VARCHAR2(60) NOT NULL,
    vl_salario      NUMBER(8,2)  NOT NULL,
    CONSTRAINT FK_DEPTO_FUNC FOREIGN KEY (cd_departamento)
    REFERENCES T_SIP_DEPARTAMENTO (cd_departamento)
);

DROP TABLE T_SIP_DEPARTAMENTO CASCADE CONSTRAINTS;
DROP TABLE T_SIP_FUNCIONARIO  CASCADE CONSTRAINTS;

-- Definindo a sequência de 1 até 999
CREATE SEQUENCE SQ_DEPTO
INCREMENT BY 1 START WITH 1
MAXVALUE 999;

-- Dual serve para quando não tem uma tabela específica para puxar a informação
SELECT SQ_DEPTO.NEXTVAL FROM DUAL; --Próximo valor disponível da sequência. Toda vez que rodar ele vai puxar um número diferente que não pode se repetir
SELECT SQ_DEPTO.CURRVAL FROM DUAL; --

INSERT INTO T_SIP_DEPARTAMENTO VALUES (SQ_DEPTO.NEXTVAL, 'RH');
INSERT INTO T_SIP_DEPARTAMENTO VALUES (SQ_DEPTO.NEXTVAL, 'RH');
INSERT INTO T_SIP_DEPARTAMENTO VALUES (SQ_DEPTO.NEXTVAL, 'MKT');

SELECT * FROM t_sip_departamento;

-- Apagando a coluna de cd_departamento 11 da tabela T_SIP_DEPARTAMENTO
DELETE FROM T_SIP_DEPARTAMENTO WHERE cd_departamento = 11;

DROP TABLE T_SIP_DEPARTAMENTO CASCADE CONSTRAINTS;
DROP TABLE T_SIP_FUNCIONARIO  CASCADE CONSTRAINTS;
DROP SEQUENCE SQ_DEPTO;